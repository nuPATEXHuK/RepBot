import re

from sqlighter import SQLighter
import config_loader as cl

db = SQLighter(cl.get_DB())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–ª—é—á–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é.
# –ü—Ä–∏–º–µ—Ä: –Ω–∞ –≤—Ö–æ–¥–µ —Å–ø–∏—Å–æ–∫ —Ç–∏–ø–∞ {Test1 : 12345, Test: 23456}, –∏ –Ω—É–∂–Ω—ã–π ID=12345, –Ω–∞ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—É—á–∞–µ–º –∏–º—è "Test1".
def get_key_by_value(value_list, value):
    key = None
    for current_key, current_value in value_list.items():
        if current_value == value:
            key = current_key
    return key

def int_from_db_answer(db_answer):
    return int(db_answer.replace("(", "").replace(")", "").replace(",", ""))

def str_from_db_answer(db_answer):
    return str(db_answer).replace("(", "").replace(")", "").replace(",", "").replace("'", "")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–Ω–∏–∂–µ–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
def change_rep(chat_id, message, from_user, to_user):
    answer = ""
    if (from_user != to_user):
        from_username = str_from_db_answer(SQLighter.get_username_by_id(db, from_user)[0])
        to_username = str_from_db_answer(SQLighter.get_username_by_id(db, to_user)[0])
        if (message == "+"):
            current_rep = int_from_db_answer(str(SQLighter.get_rep(db, to_user, chat_id)[0]))
            SQLighter.change_rep(db, to_user, chat_id, current_rep + 1)
            answer = str.format("@{} –º—É—Ä-–º—É—Ä-–º—É—Ä–∫–∞–µ—Ç –Ω–∞ @{}. –ö–∞–≤–∞–π-–Ω—è! ‚ò∫Ô∏è\n–†–µ–ø—É—Ç–∞—Ü–∏—è –ø–æ–≤—ã—à–µ–Ω–∞!", from_username, to_username)
        if (message == "-"):
            current_rep = int_from_db_answer(str(SQLighter.get_rep(db, to_user, chat_id)[0]))
            SQLighter.change_rep(db, to_user, chat_id, current_rep - 1)
            answer = str.format("@{} –æ–±–∑—ã–≤–∞–µ—Ç \"–±–∞–∫–æ–π\" @{}. üò°\n–†–µ–ø—É—Ç–∞—Ü–∏—è —Å–Ω–∏–∂–µ–Ω–∞!", from_username, to_username)
    else:
        if (message == "+"):
            username = str_from_db_answer(SQLighter.get_username_by_id(db, from_user)[0])
            answer = str.format("@{}, –ø—ã—Ç–∞–µ—à—å—Å—è —Å–∂—É–ª—å–Ω–∏—á–∞—Ç—å? –ë–∞–∞–∞–∞–∫–∞! –ö—É—Å—å —Ç–µ–±—è! üòà\n–†–µ–ø—É—Ç–∞—Ü–∏—è —Å–Ω–∏–∂–µ–Ω–∞!", username)
            current_rep = int_from_db_answer(str(SQLighter.get_rep(db, from_user, chat_id)[0]))
            SQLighter.change_rep(db, from_user, chat_id, current_rep - 1)
        if (message == "-"):
            username = str_from_db_answer(SQLighter.get_username_by_id(db, from_user)[0])
            answer = str.format("@{}, –¥–∞ —Ç—ã, –ø–æ–≥–ª—è–∂—É, –ú-—Ç–∏–ø? –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–π. üòè\n–†–µ–ø—É—Ç–∞—Ü–∏—è —Å–Ω–∏–∂–µ–Ω–∞!", username)
            current_rep = int_from_db_answer(str(SQLighter.get_rep(db, from_user, chat_id)[0]))
            SQLighter.change_rep(db, from_user, chat_id, current_rep - 1)
    return answer

def get_all_conferences():
    return ""

def add_message_stat(chat_id, from_user, username, char_count):
    if (SQLighter.get_username_by_id(db, from_user) == []):
        SQLighter.add_new_user(db, from_user, username, chat_id)
    current_messages_count = int_from_db_answer(str(SQLighter.get_message_count_stat(db, from_user, chat_id)[0]))
    current_char_count = int_from_db_answer(str(SQLighter.get_char_count_stat(db, from_user, chat_id)[0]))
    
    SQLighter.add_message_stat(db, current_messages_count + 1, current_char_count + char_count, chat_id, from_user)

# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏.
def status_by_user(user_id, chat_id):
    line = "_____________________"
    name = "–ò–º—è: {}".format(str_from_db_answer(SQLighter.get_username_by_id(db, user_id)[0]))
    activity = "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {}".format("[–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]")
    messages = "–°–æ–æ–±—â–µ–Ω–∏–π: {}".format(int_from_db_answer(str(SQLighter.get_message_count_stat(db, user_id, chat_id)[0])))
    top = "–ú–µ—Å—Ç–æ –≤ —Ç–æ–ø–µ: {}".format("[–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]")
    rep = "–†–µ–ø—É—Ç–∞—Ü–∏—è: {}".format(int_from_db_answer(str(SQLighter.get_rep(db, user_id, chat_id)[0])))
    CR = "\n"

    status = str.format("{line}{cr}{name}{cr}{activity}{cr}{messages}{cr}{top}{cr}{rep}{cr}{line}", line=line, cr=CR, name=name, activity=activity, messages=messages, top=top, rep=rep)
    return status